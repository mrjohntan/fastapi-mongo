apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo:latest
        imagePullPolicy: IfNotPresent
        name: mongo
        args: ["--dbpath","/data/db"]
        ports:
          - containerPort: 27017
#        livenessProbe:
#          exec:
#            command:
#              - mongosh
#              - --eval
#              - "db.adminCommand('ping')"
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
#          successThreshold: 1
#          failureThreshold: 6
#        readinessProbe:
#          exec:
#            command:
#              - mongosh
#              - --eval
#              - "db.adminCommand('ping')"
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
#          successThreshold: 1
#          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "testadmin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: password
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo-data"